{{ range "nginx" | ls }}
{{ .Key }} {{ .Value }};{{ end }}

events {
  {{ range "nginx/events" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}
}

http {
  {{ range "nginx/http" | ls }}
  {{ .Key }} {{ .Value }};{{ end }}

  # Generate server definitions of services.
  # Only setup reverse proxy for service have tag gu_devops=true
  {{ range $service := services }} {{ if .Tags | contains "gu_devops=true"   }}
  server {
  # Simplest, just listen on port 80
    listen 80
    {{ range $server_name_tag := .Tags }} {{ if $server_name_tag | contains "gu_service_domain" }}
      # Split tag to parse server name 
      {{ $server_name := $server_name_tag | split "="}}
      # Get server name
      server_name "{{index $server_name 1}}";

      {{ range $service_detail := service $service.Name}}
        location / {
          proxy_pass http://{{ $service_detail.Address }}:{{ $service_detail.Port }}/;
        }
      {{ end }} 
  {{ end }} {{ end }}
  }
  {{ end }} {{ end }}
}
